{"version":3,"sources":["redux/postsId/postIdActions.js","redux/postsId/postIdReducer.js","redux/postNew/postNewActions.js","redux/postNew/postNewReducer.js","redux/postsAll/postsAllActions.js","redux/postsAll/postsAllReducer.js","redux/loader/loaderActions.js","redux/loader/loaderReducser.js","redux/store.js","redux/loader/loaderSelectors.js","components/pages/Navigation/Navigation.js","components/pages/HomePage/HomePage.js","components/pages/AboutPage/AboutPage.js","components/PostsAll/PostsAll.js","services/api.js","redux/postsAll/postsAllOperations.js","redux/postsAll/postsAllSelectors.js","components/PostsAll/PostsAllContainer.js","components/pages/PostsPage/PostsPage.js","redux/postsId/postIdOperations.js","components/PostId/PostId.js","redux/postsId/postIdSelectors.js","redux/postNew/postNewOperations.js","components/PostId/PostIdContainer.js","components/pages/PostPage/PostPage.js","components/PostNew/PostNew.js","components/PostNew/PostNewContainer.js","components/pages/CreatePostPage/CreatePostPage.js","components/App.js","index.js","components/PostId/PostId.module.css","components/PostsAll/PostsAll.module.css","components/pages/AboutPage/AboutPage.module.css","components/pages/Navigation/Navigation.module.css","components/pages/HomePage/HomePage.module.css","components/PostNew/PostNew.module.css","components/pages/CreatePostPage/CreatePostPage.module.css"],"names":["Type","postIdReducer","state","type","payload","postNewReducer","filter","post","id","postsAllReducer","loaderReducer","NewPostType","AllPostsType","IdPostType","rootReducer","combineReducers","postId","postNew","postsAll","isLoading","enhancer","applyMiddleware","ReduxThunk","store","createStore","composeWithDevTools","getIsLoading","activeStyle","color","Navigation","className","css","navigation","to","exact","Home","title","AboutPage","about","aboutText","PostsAll","getPostsAll","this","props","list","map","item","key","itemTitle","itemBody","body","Component","axios","defaults","headers","get","put","baseURL","toast","configure","autoClose","draggable","mapDispatchToProps","dispatch","then","response","data","catch","error","position","POSITION","TOP_CENTER","fetchPostsAllError","connect","PostsPage","getPostId","getPostIdsonServer","fetchPostError","PostId","onReturn","onRemove","container","onClick","btn","text","deletePostId","delete","deletePostIdsonServer","deletePostError","PostPage","getIdFromProps","match","params","handleOnReturn","history","push","PostNew","handleSubmit","evt","preventDefault","addPost","setState","handleChange","target","name","value","adForm","onSubmit","placeholder","onChange","minLength","required","addPostOnServer","addPostSuccess","addPostError","CreatePostPage","App","height","width","style","display","justifyContent","alignItems","backgroundColor","zIndex","timeout","path","component","HomePage","loaderSelectors","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.44b87817.chunk.js","sourcesContent":["export const Type = {\n  GET_POST_START: 'GET_POST_START',\n  GET_POST_SUCCESS: 'GET_POST_SUCCESS',\n  GET_POST_ERROR: 'GET_POST_ERROR',\n};\n\nexport const fetchPostStart = () => ({\n  type: 'GET_POST_START',\n});\n\nexport const fetchPostSuccess = data => ({\n  type: 'GET_POST_SUCCESS',\n  payload: data,\n});\n\nexport const fetchPostError = error => ({\n  type: 'GET_POST_ERROR',\n  payload: error,\n});\n","import { Type } from './postIdActions';\n\nconst postIdReducer = (state = [], { type, payload }) => {\n  switch (type) {\n    case Type.GET_POST_SUCCESS:\n      return payload;\n    default:\n      return state;\n  }\n};\n\nexport default postIdReducer;\n","export const Type = {\n  ADD_POST_START: 'ADD_POST_START',\n  ADD_POST_SUCCESS: 'ADD_POST_SUCCESS',\n  ADD_POST_ERROR: 'ADD_POST_ERROR',\n  DELETE_POST_START: 'DELETE_POST_START',\n  DELETE_POST_SUCCESS: 'DELETE_POST_SUCCESS',\n  DELETE_POST_ERROR: 'DELETE_POST_ERROR',\n};\n\nexport const addPostStart = () => ({\n  type: Type.ADD_POST_START,\n});\n\nexport const addPostSuccess = post => ({\n  type: Type.ADD_POST_SUCCESS,\n  payload: post,\n});\n\nexport const addPostError = error => ({\n  type: Type.ADD_POST_ERROR,\n  payload: {\n    error,\n  },\n});\n\nexport const deletePostStart = () => ({\n  type: Type.DELETE_POST_START,\n});\n\nexport const deletePostSuccess = post => ({\n  type: Type.DELETE_POST_SUCCESS,\n  payload: post,\n});\n\nexport const deletePostError = error => ({\n  type: Type.DELETE_POST_ERROR,\n  payload: {\n    error,\n  },\n});\n","import { Type } from './postNewActions';\n\nconst postNewReducer = (state = [], { type, payload }) => {\n  switch (type) {\n    case Type.ADD_POST_SUCCESS:\n      return [payload, ...state];\n    case Type.DELETE_POST_SUCCESS:\n      return state.filter(post => post.id !== payload);\n    default:\n      return state;\n  }\n};\n\nexport default postNewReducer;\n","export const Type = {\n  FETCH_POSTS_ALL_START: 'FETCH_POSTS_ALL_START',\n  FETCH_POSTS_ALL_SUCCESS: 'FETCH_POSTS_ALL_SUCCESS',\n  FETCH_POSTS_ALL_ERROR: 'FETCH_POSTS_ALL_ERROR',\n};\n\nexport const fetchPostsAllStart = () => ({\n  type: 'FETCH_POSTS_ALL_START',\n});\n\nexport const fetchPostsAllSuccess = data => ({\n  type: 'FETCH_POSTS_ALL_SUCCESS',\n  payload: data,\n});\n\nexport const fetchPostsAllError = error => ({\n  type: 'FETCH_POSTS_ALL_ERROR',\n  payload: error,\n});\n","import { Type } from './postsAllActions';\n\nconst postsAllReducer = (state = [], { type, payload }) => {\n  switch (type) {\n    case Type.FETCH_POSTS_ALL_SUCCESS:\n      return payload;\n    default:\n      return state;\n  }\n};\n\nexport default postsAllReducer;\n","export const Type = {\n  LOADER_ON: 'isLoading/LOADER_ON',\n  LOADER_OFF: 'isLoading/LOADER_OFF',\n};\n\nexport const loaderOn = () => ({\n  type: Type.LOADER_ON,\n});\nexport const loaderOff = () => ({\n  type: Type.LOADER_OFF,\n});\n","import { Type } from './loaderActions';\nimport * as NewPostType from '../postNew/postNewActions';\nimport * as AllPostsType from '../postsAll/postsAllActions';\nimport * as IdPostType from '../postsId/postIdActions';\n\nconst loaderReducer = (state = false, { type }) => {\n  switch (type) {\n    case Type.LOADER_ON: // Включить спиннер\n    case NewPostType.Type.ADD_POST_START:\n    case NewPostType.Type.DELETE_POST_START:\n    case AllPostsType.Type.FETCH_POSTS_ALL_START:\n    case IdPostType.Type.GET_POST_START:\n      return true;\n    case Type.LOADER_OFF: // Выключить спиннер\n    case NewPostType.Type.ADD_POST_SUCCESS:\n    case NewPostType.Type.ADD_POST_ERROR:\n    case NewPostType.Type.DELETE_POST_SUCCESS:\n    case NewPostType.Type.DELETE_POST_ERROR:\n    case AllPostsType.Type.FETCH_POSTS_ALL_SUCCESS:\n    case AllPostsType.Type.FETCH_POSTS_ALL_ERROR:\n    case IdPostType.Type.GET_POST_SUCCESS:\n    case IdPostType.Type.GET_POST_ERROR:\n      return false;\n    default:\n      return state;\n  }\n};\n\nexport default loaderReducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport ReduxThunk from 'redux-thunk';\nimport postIdReducer from './postsId/postIdReducer';\nimport postNewReducer from './postNew/postNewReducer';\nimport postsAllReducer from './postsAll/postsAllReducer';\nimport loaderReducer from './loader/loaderReducser';\n\nconst rootReducer = combineReducers({\n  postId: postIdReducer,\n  postNew: postNewReducer,\n  postsAll: postsAllReducer,\n  isLoading: loaderReducer,\n});\n\nconst enhancer = applyMiddleware(ReduxThunk);\n\nconst store = createStore(rootReducer, composeWithDevTools(enhancer));\n\nexport default store;\n","// eslint-disable-next-line import/prefer-default-export\nexport const getIsLoading = state => state.isLoading;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport css from './Navigation.module.css';\n\nconst activeStyle = {\n  color: 'palevioletred',\n};\n\nconst Navigation = () => (\n  <ul className={css.navigation}>\n    <li>\n      <NavLink to=\"/home\" activeStyle={activeStyle}>\n        Home\n      </NavLink>\n    </li>\n    <li>\n      <NavLink to=\"/\" exact activeStyle={activeStyle}>\n        Posts\n      </NavLink>\n    </li>\n    <li>\n      <NavLink to=\"/posts/new\" activeStyle={activeStyle}>\n        Create Post\n      </NavLink>\n    </li>\n    <li>\n      <NavLink to=\"/about\" activeStyle={activeStyle}>\n        About\n      </NavLink>\n    </li>\n  </ul>\n);\n\nexport default Navigation;\n","import React from 'react';\nimport css from './HomePage.module.css';\n\nconst Home = () => <h1 className={css.title}>Welcom to Paws online blog</h1>;\n\nexport default Home;\n","import React from 'react';\nimport css from './AboutPage.module.css';\n\nconst AboutPage = () => (\n  <>\n    <h3 className={css.about}>Fun facts about us</h3>\n    <p className={css.aboutText}>\n      Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptates harum\n      voluptatibus veniam ipsa similique laudantium, soluta ipsum aut dolorem\n      sint libero, iste accusantium magni nihil tenetur error laboriosam placeat\n      consequatur nobis incidunt illum alias laborum! Obcaecati error\n      consequatur inventore exercitationem, facilis, illo facere debitis\n      molestiae sint, perspiciatis voluptas! Molestiae aliquid quasi iure\n      temporibus eum vitae facere consectetur minima possimus voluptate,\n      perspiciatis eaque nulla nam, tempore illo blanditiis cumque repellat!\n      Nulla cum nostrum officiis nemo, quae accusantium veniam reprehenderit\n      aspernatur, sapiente ipsum alias, eius quasi soluta dolores et minima\n      deleniti perspiciatis cumque? Culpa necessitatibus, ipsam soluta molestiae\n      odio fugit ullam animi non. Odio obcaecati alias eligendi sit error ullam\n      fugit consequatur! Minima dolorum, explicabo aliquid magni iste dicta\n      fugiat asperiores sequi cupiditate totam debitis eligendi quas corporis\n      saepe omnis autem voluptatibus itaque veniam a quidem praesentium sint\n      ducimus! Dolorum sapiente harum, tempora quam odio corrupti doloremque\n      beatae nemo dolor sit sint consequatur, facilis et omnis explicabo\n      voluptates! Quia commodi quisquam corrupti animi expedita, sit, iste\n      officiis soluta, incidunt voluptatem nihil! Optio sint commodi expedita.\n      Blanditiis aut mollitia similique vel. Optio vitae fugit in autem aliquam\n      unde! Voluptatem molestiae officia eos quas saepe. Labore quis, facere\n      distinctio, consequatur reiciendis exercitationem unde fugiat laborum\n      cupiditate deleniti officiis nesciunt possimus quae ea laboriosam iure!\n      Asperiores tempore vero nihil libero magnam perspiciatis dolores quis\n      dignissimos nisi sapiente quo praesentium consequuntur officia modi\n      molestias laborum assumenda molestiae optio deleniti, provident deserunt\n      illum voluptatibus nesciunt. Pariatur quis, eum sunt cum deleniti dolores\n      cumque, fugit veritatis quidem dignissimos quas blanditiis nesciunt\n      similique. Aut similique iusto nemo, a eaque distinctio enim corrupti\n      dicta, exercitationem mollitia tempore sunt recusandae voluptate optio.\n      Voluptatem veniam iste neque cupiditate ipsa. Cupiditate magnam illum enim\n      quia saepe accusantium veritatis debitis laborum molestiae est, tempore\n      placeat voluptatibus nobis minima voluptate ducimus repudiandae natus\n      quibusdam praesentium?\n    </p>\n  </>\n);\n\nexport default AboutPage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport css from './PostsAll.module.css';\n\nexport default class PostsAll extends Component {\n  state = {};\n\n  componentDidMount() {\n    const { getPostsAll } = this.props;\n    getPostsAll();\n  }\n\n  render() {\n    const { postsAll } = this.props;\n    return (\n      <>\n        <ul className={css.list}>\n          {postsAll.map(item => (\n            <li key={item.id} className={css.item}>\n              <Link to={`/posts/${item.id}`}>\n                <h3 className={css.itemTitle}>{item.title}</h3>\n                <p className={css.itemBody}>{item.body}</p>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\n\nPostsAll.propTypes = {\n  getPostsAll: PropTypes.func.isRequired,\n  postsAll: PropTypes.arrayOf(PropTypes.shape({}).isRequired).isRequired,\n};\n","import axios from 'axios';\n\naxios.defaults.headers.post['Content-Type'] = 'application/json';\naxios.defaults.headers.get['Content-Type'] = 'application/json';\naxios.defaults.headers.put['Content-Type'] = 'application/json';\n\naxios.defaults.baseURL = 'https://simple-blog-api.crew.red';\n\nexport const addPostOnServer = post => axios.post('/posts', post);\n\nexport const getPostsonServer = () => axios.get('/posts');\n\nexport const getPostIdsonServer = postId => axios.get(`/posts/${postId}`);\n\nexport const deletePostIdsonServer = postId => axios.delete(`/posts/${postId}`);\n","import { toast } from 'react-toastify';\nimport {\n  fetchPostsAllStart,\n  fetchPostsAllSuccess,\n  fetchPostsAllError,\n} from './postsAllActions';\nimport { getPostsonServer } from '../../services/api';\n\ntoast.configure({\n  autoClose: 5000,\n  draggable: false,\n});\n\nconst getPostsAll = () => dispatch => {\n  dispatch(fetchPostsAllStart());\n  getPostsonServer()\n    .then(response => {\n      dispatch(fetchPostsAllSuccess(response.data));\n    })\n    .catch(error => {\n      toast.error(\n        'Сталася помилка. Сервіс тимчасово недоступний. Спробуйте, будь-ласка, пізніше',\n        {\n          position: toast.POSITION.TOP_CENTER,\n          className: 'foo-bar',\n        },\n      );\n      return dispatch(fetchPostsAllError(error));\n    });\n};\n\nexport default getPostsAll;\n","const postsAll = state => state.postsAll;\n\nexport default postsAll;\n","import { connect } from 'react-redux';\nimport PostsAll from './PostsAll';\nimport getPostsAll from '../../redux/postsAll/postsAllOperations';\nimport postsAll from '../../redux/postsAll/postsAllSelectors';\n\nconst mapStateToProps = state => ({\n  postsAll: postsAll(state),\n});\n\nconst mapDispatchToProps = {\n  getPostsAll,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostsAll);\n","import React from 'react';\nimport PostsAll from '../../PostsAll/PostsAllContainer';\n\nconst PostsPage = () => {\n  return (\n    <>\n      <PostsAll />\n    </>\n  );\n};\n\nexport default PostsPage;\n","import { toast } from 'react-toastify';\nimport {\n  fetchPostStart,\n  fetchPostSuccess,\n  fetchPostError,\n} from './postIdActions';\nimport { getPostIdsonServer } from '../../services/api';\n\ntoast.configure({\n  autoClose: 5000,\n  draggable: false,\n});\n\nconst getPostId = postId => dispatch => {\n  dispatch(fetchPostStart());\n  getPostIdsonServer(postId)\n    .then(response => {\n      dispatch(fetchPostSuccess(response.data));\n    })\n    .catch(error => {\n      toast.error(\n        'Сталася помилка. Сервіс тимчасово недоступний. Спробуйте, будь-ласка, пізніше',\n        {\n          position: toast.POSITION.TOP_CENTER,\n          className: 'foo-bar',\n        },\n      );\n      return dispatch(fetchPostError(error));\n    });\n};\n\nexport default getPostId;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './PostId.module.css';\n\nconst PostId = ({ postId: { title, body, id }, onReturn, onRemove }) => {\n  return (\n    <div className={css.container}>\n      <button type=\"button\" onClick={onReturn} className={css.btn}>\n        Return\n      </button>\n      <h2 className={css.title}>{title}</h2>\n      <p className={css.text}>{body}</p>\n      <button className={css.btn} type=\"button\" onClick={() => onRemove(id)}>\n        Delete\n      </button>\n    </div>\n  );\n};\n\nPostId.propTypes = {\n  onReturn: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired,\n};\n\nexport default PostId;\n","const postId = state => state.postId;\n\nexport default postId;\n","import { toast } from 'react-toastify';\nimport {\n  addPostStart,\n  addPostSuccess,\n  addPostError,\n  deletePostStart,\n  deletePostSuccess,\n  deletePostError,\n} from './postNewActions';\nimport { addPostOnServer, deletePostIdsonServer } from '../../services/api';\n\ntoast.configure({\n  autoClose: 5000,\n  draggable: false,\n});\n\nexport const addPost = post => dispatch => {\n  dispatch(addPostStart());\n  addPostOnServer(post)\n    .then(response => {\n      dispatch(addPostSuccess(response.data));\n    })\n    .catch(error => {\n      toast.error(\n        'Сталася помилка. Сервіс тимчасово недоступний. Спробуйте, будь-ласка, пізніше',\n        {\n          position: toast.POSITION.TOP_CENTER,\n          className: 'foo-bar',\n        },\n      );\n      return dispatch(addPostError(error));\n    });\n};\n\nexport const deletePostId = postId => dispatch => {\n  dispatch(deletePostStart());\n  deletePostIdsonServer(postId)\n    .then(response => {\n      dispatch(deletePostSuccess(response.data));\n    })\n    .catch(error => {\n      toast.error(\n        'Сталася помилка. Сервіс тимчасово недоступний. Спробуйте, будь-ласка, пізніше',\n        {\n          position: toast.POSITION.TOP_CENTER,\n          className: 'foo-bar',\n        },\n      );\n      return dispatch(deletePostError(error));\n    });\n};\n","import { connect } from 'react-redux';\nimport PostId from './PostId';\nimport postId from '../../redux/postsId/postIdSelectors';\nimport { deletePostId } from '../../redux/postNew/postNewOperations';\n\nconst mapStateToProps = state => ({\n  postId: postId(state),\n});\n\nconst mapDispatchToProps = {\n  onRemove: id => deletePostId(id),\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostId);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport getPostId from '../../../redux/postsId/postIdOperations';\nimport PostId from '../../PostId/PostIdContainer';\n\nclass PostPage extends Component {\n  state = {};\n\n  static propTypes = {\n    history: PropTypes.shape({\n      push: PropTypes.func,\n    }).isRequired,\n    getPostId: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    const id = this.getIdFromProps(this.props);\n    // eslint-disable-next-line react/destructuring-assignment\n    this.props.getPostId(id);\n  }\n\n  getIdFromProps = props => props.match.params.id;\n\n  handleOnReturn = () => {\n    const { history } = this.props;\n    history.push('/');\n  };\n\n  render() {\n    return (\n      <>\n        <PostId onReturn={this.handleOnReturn} />\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  getPostId,\n};\n\nexport default connect(null, mapDispatchToProps)(PostPage);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport css from './PostNew.module.css';\n\nclass PostNew extends Component {\n  state = { title: '', body: '' };\n\n  handleSubmit = evt => {\n    evt.preventDefault();\n    this.props.addPost(this.state);\n    this.setState({\n      title: '',\n      body: '',\n    });\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    const { title, body } = this.state;\n    return (\n      <>\n        <form className={css.adForm} onSubmit={this.handleSubmit}>\n          <label>Title</label>\n          <input\n            placeholder=\"...\"\n            onChange={this.handleChange}\n            minLength=\"3\"\n            required\n            type=\"text\"\n            name=\"title\"\n            value={title}\n          />\n          <label>Description</label>\n          <textarea\n            placeholder=\"...\"\n            onChange={this.handleChange}\n            required\n            minLength=\"3\"\n            type=\"text\"\n            name=\"body\"\n            value={body}\n          />\n          <button type=\"submit\">Create post</button>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default PostNew;\n\nPostNew.propTypes = {\n  addPost: PropTypes.func.isRequired,\n};\n","import { connect } from 'react-redux';\nimport PostNew from './PostNew';\nimport { addPost } from '../../redux/postNew/postNewOperations';\n\nconst mapDispatchToProps = {\n  addPost,\n};\n\nexport default connect(null, mapDispatchToProps)(PostNew);\n","import React, { Component } from 'react';\nimport PostNew from '../../PostNew/PostNewContainer';\nimport css from './CreatePostPage.module.css';\n\nexport default class CreatePostPage extends Component {\n  state = {};\n\n  render() {\n    return (\n      <div className={css.container}>\n        <PostNew />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Loader from 'react-loader-spinner';\nimport * as loaderSelectors from '../redux/loader/loaderSelectors';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Navigation from './pages/Navigation/Navigation';\nimport HomePage from './pages/HomePage/HomePage';\nimport AboutPage from './pages/AboutPage/AboutPage';\nimport PostsPage from './pages/PostsPage/PostsPage';\nimport PostPage from './pages/PostPage/PostPage';\nimport CreatePostPage from './pages/CreatePostPage/CreatePostPage';\n\nclass App extends Component {\n  state = {};\n\n  render() {\n    const { isLoading } = this.props;\n    const loaderStyles = {\n      position: 'fixed',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '100vh',\n      width: '100%',\n      backgroundColor: '#fff',\n      zIndex: '10',\n    };\n    return (\n      <>\n        {isLoading && (\n          <Loader\n            type=\"ThreeDots\"\n            color=\"#F39A3E\"\n            height={80}\n            width={80}\n            style={loaderStyles}\n            timeout={0}\n          />\n        )}\n        <Navigation />\n        <Switch>\n          <Route path=\"/\" exact component={PostsPage} />\n          <Route path=\"/home\" component={HomePage} />\n          <Route path=\"/posts/new\" component={CreatePostPage} />\n          <Route path=\"/posts/:id\" component={PostPage} />\n          <Route path=\"/about\" component={AboutPage} />\n          <Redirect to=\"/home\" />\n        </Switch>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isLoading: loaderSelectors.getIsLoading(state),\n});\n\nApp.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n};\n\nexport default connect(mapStateToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport store from './redux/store';\nimport App from './components/App';\nimport './stylesheet/main.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PostId_container__CBCu-\",\"btn\":\"PostId_btn__1SUfy\",\"title\":\"PostId_title__PToHw\",\"text\":\"PostId_text__20gDW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"PostsAll_list__2gkMR\",\"item\":\"PostsAll_item__17eQb\",\"itemTitle\":\"PostsAll_itemTitle__14Ua5\",\"itemBody\":\"PostsAll_itemBody__3sper\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"about\":\"AboutPage_about__11gMD\",\"aboutText\":\"AboutPage_aboutText__1S5xh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"Navigation_navigation__tomJQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"HomePage_title__heAQ8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"adForm\":\"PostNew_adForm__2hKsU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CreatePostPage_container__1PA1u\"};"],"sourceRoot":""}